version: 0.2
env:
  variables:
    TF_VERSION: "0.13.2"
    PY_VERSION: "3.9.6"
    GIT_VERSION: "2.9.5"

  parameter-store:
    ssh_key: variable_ssh_key
    cc_user: variable_codecommit_user
 
  #secrets-manager:
    #ACCESS_KEY_ID2: secret-key-name/secret-value

  git-credential-helper: yes
    
phases:
  install:
    commands:
      #  - echo `pwd`
      - echo UPDATING SSH CLIENT
      - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
      - echo "STARTING PYTHON INSTALLATION"
      - "curl -s -qL -o python.tgz https://www.python.org/ftp/python/${PY_VERSION}/Python-${PY_VERSION}.tgz"
      - "tar xf python.tgz -C /usr/bin/"
      - "python --version"
      - python -m pip install -U pip
      - pip install git-remote-codecommit

  pre_build:
    commands:
      #- ACCESS_KEY_ID=$(echo -n $(aws secretsmanager get-secret-value --secret-id test-iha-deployer/aws_access_key_id | jq -r .SecretString) | base64 -w 0)
      - aws --version
      - git --version
      
      # Adds a private SSH key to allow us to clone or npm install Git repositories
      - eval $(ssh-agent -s)
      - mkdir -p ~/.ssh

      # Configure SSH Key
      #- ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa <<< y. #generate a new ssh key on demand
      - echo "$ssh_key" > ~/.ssh/id_rsa
      - cd ~/.ssh/
      - cat id_rsa
      - |
        echo "Multiline command"
        cat > ~/.ssh/config <<EOL
        Host host-unique-name
            Hostname git-codecommit.us-east-1.amazonaws.com
            User ${cc_user}
            IdentityFile ~/.ssh/id_rsa
        EOL
      - cat ~/.ssh/config
      
      # Configure SSH Permissions
      - chmod 700 ~/.ssh
      - chmod 600 ~/.ssh/config
      - chmod 600 ~/.ssh/id_rsa
      - ssh-keyscan -t rsa1,rsa,dsa git-codecommit.us-east-1.amazonaws.com >> ~/.ssh/known_hosts

      # Clone directories
      - echo CLONE DIRECTORIES
      - mkdir /usr/bin/repo
      - cd /usr/bin/repo
      #leveraging typical git clone
      - git clone ssh://host-unique-name/v1/repos/your-repo1-name
      #leveraging git remote clone for codecommit
      - git clone codecommit://your-repo2-name new-repo-name 

  build:
    commands: 
      - cd /usr/bin/your-repo1-name
      - cd your-repo1-name
      #Way to change from main branch to different branch
      - git checkout your-repo1-name-branch
      - git branch
      - ls
      #Changing branch from remote codecommit code
      - cd /usr/bin/new-repo-name
      - cd new-repo-name
      - git checkout new-repo-name-branch
      - git branch
      - ls
      
